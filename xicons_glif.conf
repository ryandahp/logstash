input {
	file {
			path => ["C:/Users/Administrator/Documents/IMGZERO/sample_glif.txt"]
			#path => ["/home/julian/dlogstash/sdata/zXm.*"]
			#tags => ["xmltest"]
			#add_field => {"log_type" => "spc"}
			#add_field => {"promo_desc" => "NO PROMO CODE"}		
	}
	
	#redis{
	#	host => "192.168.158.27"
	#	port => "5044"
	#	key => "glif"
	#	data_type => "list"
	#}
}

filter {
   #grok {
   #  patterns_dir => ["patterns"]
   #  match => [ "message", "%{PAR_ICON}" ]
   #}
	if [message] =~ "restoflineignored" {
		drop {}
	} else {
	mutate {
		gsub => [ "message", " ", "" ]
		gsub => [ "message", "	", "" ]
		gsub => [ "message", "\|\|", "|0|" ]
	}
	
	grok {
     patterns_dir => ["patterns"]
     match => [ "message", "%{GLIF_PATTERN}" ]
   }
   
    #aggregate {
	#	   task_id => "%{glif_ref}"
	#	   code => "
	#				test = event.get('lcy_amt')
	#						if test.include? '-' then
	#							map['lct_amt_minus'] = event.get('lcy_amt');
	#						end;
	#						if !test.include? '-' then
	#							map['lct_amt_plus'] = event.get('lcy_amt');
	#						end;
	#						map['brch'] = event.get('brch');
	#						map['date'] = event.get('date');
	#						map['time'] = event.get('time');
	#						map['jr_no'] = event.get('jr_no');
	#						map['desc'] = event.get('desc');
	#						map['fcy_amt'] = event.get('fcy_amt');
	#						map['ps_jrnl_no'] = event.get('ps_jrnl_no');
	#						event.cancel(); 
	#	   "
	#	   push_map_as_event_on_timeout => true
	#	   timeout_task_id_field => "glif_ref"
	#	   inactivity_timeout => 5
	#	   timeout => 60
	#	   map_action => "create_or_update"
	#	   
	#}
	
	ruby {
		code => "
		if !event.get(%{time}).nil? then
			length_time = event.get(%{time}).length
			time = event.get(%{time})
			if length_time == 5 then
				time_f = '0' + time
				time_float = Time.strptime(time_f, '%H%M%S')
				time_string = time_float.strftime('%H%M%S')
				event.set('f_time', time_string)
			else
				time_float = Time.strptime(time, '%H%M%S')
				time_string = time_float.strftime('%H%M%S')
				event.set('f_time', time_string)
			end;
		end;
		"
	}
	
	mutate {
		add_field => {"xdate" => "%{date}%{f_time}"}
	}
	date {
       match => ["xdate" , "yyyyMMddHHmmss"]
       target => "@timestamp"
    }
    mutate {
		#convert => {"lct_amt_minus" => "integer"}
		#convert => {"lct_amt_plus" => "integer"}
		convert => {"amount_idr" => "integer"}
		convert => {"amount_non_idr" => "integer"}
		convert => {"cabang" => "integer"}
	}
	mutate {
		convert => {"cabang" => "string"}
	}
	#mutate {
	#	convert => {"kode_cab" => "integer"}
	#}
	#
	#mutate {
	#	convert => {"kode_cab" => "string"}
	#}
	#mutate {
	#	convert => {"trx_count" => "integer"}
	#}

   mutate { 
		remove_field => ["tags", "message","path","@version", "type", "host", "xdate", "agent","ecs"]
   }
}
}

output {
   stdout { codec => rubydebug }
  #elasticsearch {
  #   hosts => [ "192.168.99.40:9200"]
  #   index => "glif-%{+yyyy.MM}"
  #   user => "ls23" 
  #   password => "bniy2k"
  #}
}