input {
  beats {
    port => 5062
  }
}


filter {
	mutate {
		gsub => [ "[server][servername]", ".LOG", "" ]
	}
	
	mutate {
		remove_field => [ "host", "@version", "log","agent","ecs","input","tags"]
	}
	
	if [message] =~ "(==========  SVN STATUS  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "svn_status:   L     ", "svn_status: L |" ]
			gsub => [ "message", "svn_status: ", ";" ]
			gsub => [ "message", "==========  SVN STATUS  ==========;", "" ]
			gsub => [ "message", " \| ", "|" ]
			add_field => { "svn_id_head" => "svn_status"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			target => "status"
			field_split_pattern =>";"
			value_split => "\|"
		}
		
		ruby {
			code => "
			if !event.get(%{[status][!]}).nil? then
				#event.set('total_!', event.get(%{[status][!]}).count)
				if !event.get(%{[status][!]}).is_a?(Array) then
					event.set('total_!', 1)
				else 
					event.set('total_!', event.get(%{[status][!]}).count)
				end;
			end;
			if !event.get(%{[status][M]}).nil? then
				if !event.get(%{[status][M]}).is_a?(Array) then
					event.set('total_M', 1)
				else 
					event.set('total_M', event.get(%{[status][M]}).count)
				end;
			end;
			if !event.get(%{[status][?]}).nil? then
				if !event.get(%{[status][?]}).is_a?(Array) then
					event.set('total_?', 1)
				else 
					event.set('total_?', event.get(%{[status][?]}).count)
				end;
			end;
			if !event.get(%{[status][L]}).nil? then
				if !event.get(%{[status][L]}).is_a?(Array) then
					event.set('total_L', 1)
				else 
					event.set('total_L', event.get(%{[status][L]}).count)
				end;
			end;
		  "
		}
		
		mutate {
			remove_field => [ "message"]
		}
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
	} else if [message] =~ "(==========  SVN REVISION  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "svn_revision: ", ";" ]
			gsub => [ "message", "==========  SVN REVISION  ==========;", "" ]
			gsub => [ "message", " \| ", "|" ]
			gsub => [ "message", ": ", "|" ]
			gsub => [ "message", " ", "_" ]
			add_field => { "svn_id_head" => "svn_revision"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			field_split_pattern =>";"
			value_split => "\|"
		}
		
		mutate {
			remove_field => [ "message"]
		}
		
		elasticsearch{
			hosts => ["192.168.99.40:9200"]
			user  => "ls23"
			password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
	}
	else {
		mutate {
			add_field => { "svn_id_head" => "svn_status"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}

		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		#drop{}
	}
}

output {
  stdout { codec => rubydebug }
  #f [previousSvnId] != [_id] {
	#	elasticsearch {
	#	   hosts => [ "192.168.99.40:9200"]
	#	   index => "test-svn-%{[server][servername]}-%{+YYYY.MM.dd}"
	#	   user  => "ls23"
	#		password => "bniy2k"
	#	   document_id => "%{svn_id_head}%{[server][servername]}"
	#	   action => index
	#	}
  #} else if [previousSvnId] == [_id] {
	#	elasticsearch {
	#	   hosts => [ "192.168.99.40:9200"]
	#	   index => "test-svn-%{[server][servername]}-%{+YYYY.MM.dd}"
	#	   user  => "ls23"
	#		password => "bniy2k"
	#	   document_id => "%{svn_id_head}%{[server][servername]}"
	#	   action => "update"
	#	   doc_as_upsert => "true"
	#	}
  #} 
}