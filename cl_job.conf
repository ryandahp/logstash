input {
  file {
	path => ["C:/Users/Administrator/Documents/CARDLINK_BATCH_PROCESS/*T*"]
  }
}

filter {
	mutate {
		gsub => [ "path", "C:\Users\Administrator\Documents\CARDLINK_BATCH_PROCESS\", "" ]
	}
	mutate {
		lowercase => ["path"]
	}
	if [message] =~ "(0                   Nothing|0                   MSG*|^                    MSG*|zJOS/Puspa|                    Nothing|0    Detail steps:|0    Triggered by:|Trigger-src|000 EQ 000|LE 004 00)" {
		drop {}
	} else if [message] =~ "-Wkld"{
		if [message] !~ "n/a"  {
			mutate { 
				gsub => [ "message", "\r", "" ]   
			}
			grok {
						patterns_dir => ["patterns"]
						match => [ "message", "%{CARDLINK_LOG}" ]
			}
			kv {
								source => "param"
								field_split_pattern =>"\s"
								value_split => "="
			}
			
			if [end_date] =~ ".........."{
				mutate {
					update => { "end_date" => "%{+1970/01/01}" }
					#remove_field => [ "end_date", "end_time" ]
				}
			}
		} else {
			mutate { 
				gsub => [ "message", "\r", "" ]
			}
			grok {
						patterns_dir => ["patterns"]
						match => [ "message", "%{CARDLINK_LOG1}" ]
			}
			mutate { 
				gsub => [ "param", 'a      ', "a " ]
			}
			kv {
								source => "param"
								field_split_pattern =>"\s"
								value_split => "="
			}
			if [start_date] =~ "today" {
				mutate {
					update => { "start_date" => "%{+YYYY/MM/dd}" }
					remove_field => [ "end_date", "end_time" ]
					#add_field => { "start_date" => "%{+YYYY/MM/dd}" }
				}
			} 
		}
	} else {
		mutate { 
			gsub => [ "message", '                    ', "" ]
			gsub => [ "message", '         ', "" ]
			gsub => [ "message", "\r", "" ]
		}
		grok {
						patterns_dir => ["patterns"]
						match => [ "message", "%{CARDLINK_LOG2}" ]
		}
		
		if [jobstep] == "Jobstep" or [no] == "JOB"{
			drop{}
		} else if [procstep] == "000" or  [procstep] == "100" or  [procstep] == "004"{
			mutate {
				copy => { "end_time" => "elapsed" }
				copy => { "ucc" => "end_time" }
				copy => { "procstep" => "ucc" }
				remove_field => [ "procstep" ]
			}
		} else if [no] == "0" {
			grok {
						patterns_dir => ["patterns"]
						match => [ "message", "%{CARDLINK_LOG3}" ]
			}
			mutate{
					remove_field => [ "no_1" ]
					replace => { "procstep" => "%{[procstep][1]}" }
					replace => { "jobstep" => "%{[jobstep][1]}" }
					replace => { "ucc" => "%{[ucc][1]}" }
					replace => { "no" => "%{[no][1]}" }
					replace => { "end_time" => "%{[end_time][1]}" }
					replace => { "elapsed" => "%{[elapsed][1]}" }
			}
			
		}
		
		mutate {
				convert => { "no" => "integer" }
				split => { "elapsed" => "." }
				#gsub => [ "elapsed", '.', "" ]
				add_field => { "elapsed_1" => "%{[elapsed][0]}" }
				add_field => { "elapsed_2" => "%{[elapsed][1]}" }
				add_field => { "elapsed_3" => "%{[elapsed][0]}%{[elapsed][1]}" }
		}
		
		mutate {
				remove_field => [ "elapsed_1","elapsed_2","elapsed" ]
		}
		
		mutate {
				convert => { "elapsed_3" => "integer" }
		}
		
		if ! [end_time]{
			mutate {
					add_field=>{"xdate1" => "%{+YYYY/MM/dd}"}
			}
		} else {
			mutate {
					add_field=>{"xdate" => "%{+YYYY/MM/dd}%{end_time}"}
			}
		}
		
		date {
				match => ["xdate" , "YYYY/MM/ddHH:mm:ss.SS"]
				target => "@timestamp"
				timezone => "Asia/Jakarta"
		}
		
		if [end_time] =~ "^11:*|^12:*|^13:*|^14:*|^15:*|^16:*|^17:*|^18:*|^19:*|^20:*|^21:*|^22:*|^23:*" {
			ruby {
				code => 'event.set("@timestamp", LogStash::Timestamp.new(Time.at(event.get("@timestamp").to_f-86400)))'				
			}
		}
	}	
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
	hosts => ["192.168.99.40:9200"]
	#index => "ap-%{[fields][log_type]}-%{+YYYY.MM.dd}"
	index => "%{path}"
	user  => "ls23"
	password => "bniy2k"
  }
}