input {
  beats {
    port => 5064
  }
}


filter {
	mutate {
		gsub => [ "[server][servername]", ".LOG", "" ]
		gsub => [ "[server][servername]", "ERRPR_", "" ]
		gsub => [ "[server][servername]", "WINRM_NOT_CONNECT_", "" ]
		gsub => [ "[server][servername]", "SVN_NOT_RECOGNIZE_", "" ]
		gsub => [ "[server][servername]", "ACCESS_DENIED_", "" ]
	}
	
	mutate {
		remove_field => [ "host", "@version","agent","ecs","input","tags"]
	}
	
	if [message] =~ "(==========  SVN STATUS  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "svn_status:   L     ", "svn_status: L |" ]
			gsub => [ "message", "svn_status: ", ";" ]
			gsub => [ "message", "==========  SVN STATUS  ==========;", "" ]
			gsub => [ "message", " \| ", "|" ]
			add_field => { "svn_id_head" => "svn_status"}
			add_field => { "suspect" => "success"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			target => "status"
			field_split_pattern =>";"
			value_split => "\|"
		}
		
		ruby {
			code => "
			if !event.get(%{[status][!]}).nil? then
				#event.set('total_!', event.get(%{[status][!]}).count)
				if !event.get(%{[status][!]}).is_a?(Array) then
					event.set('total_!', 1)
				else 
					event.set('total_!', event.get(%{[status][!]}).count)
				end;
			end;
			if !event.get(%{[status][M]}).nil? then
				if !event.get(%{[status][M]}).is_a?(Array) then
					event.set('total_M', 1)
				else 
					event.set('total_M', event.get(%{[status][M]}).count)
				end;
			end;
			if !event.get(%{[status][?]}).nil? then
				if !event.get(%{[status][?]}).is_a?(Array) then
					event.set('total_?', 1)
				else 
					event.set('total_?', event.get(%{[status][?]}).count)
				end;
			end;
			if !event.get(%{[status][L]}).nil? then
				if !event.get(%{[status][L]}).is_a?(Array) then
					event.set('total_L', 1)
				else 
					event.set('total_L', event.get(%{[status][L]}).count)
				end;
			end;
		  "
		}
		
		mutate {
			remove_field => [ "message"]
		}
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		elasticsearch{
			hosts => ["localhost"]
			#user  => "ls23"
			#password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
	} else if [message] =~ "(==========  SVN REVISION  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "svn_revision: ", ";" ]
			gsub => [ "message", "==========  SVN REVISION  ==========;", "" ]
			gsub => [ "message", " \| ", "|" ]
			gsub => [ "message", ": ", "|" ]
			gsub => [ "message", " ", "_" ]
			add_field => { "svn_id_head" => "svn_revision"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			field_split_pattern =>";"
			value_split => "\|"
		}
		
		#mutate {
		#	remove_field => [ "message"]
		#}
		
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		elasticsearch{
			hosts => ["localhost"]
			#user  => "ls23"
			#password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
	} else if [message] =~ "(==========  SVN UPDATE  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "svn_update: U    ", "svn_update: U |" ]
			gsub => [ "message", "svn_update: ", ";" ]
			gsub => [ "message", "==========  SVN UPDATE  ==========", "" ]
			gsub => [ "message", " \| ", "|" ]
			add_field => { "svn_id_head" => "svn_update"}
			add_field => { "suspect" => "success"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			target => "status"
			field_split_pattern =>";"
			value_split => "\|"
		}
		
		ruby {
			code => "
			if !event.get(%{[status][U]}).nil? then
				#event.set('total_!', event.get(%{[status][!]}).count)
				if !event.get(%{[status][U]}).is_a?(Array) then
					event.set('total_U', 1)
				else 
					event.set('total_U', event.get(%{[status][U]}).count)
				end;
			end;
		  "
		}
		
		#mutate {
		#	remove_field => [ "message"]
		#}
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		elasticsearch{
			hosts => ["localhost"]
			#user  => "ls23"
			#password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
	} else if [message] =~ "(==========  SVN TIME UPDATE  ==========)" {
		mutate {
			gsub => [ "message", "\n", "" ]
			gsub => [ "message", "Hours             :", "Hours:" ]
			gsub => [ "message", "Minutes           :", ";Minutes:" ]
			gsub => [ "message", "Seconds           :", ";Seconds:" ]
			gsub => [ "message", "Milliseconds      :", ";Milliseconds:" ]
			gsub => [ "message", "==========  SVN TIME UPDATE  ==========", "" ]
			add_field => { "svn_id_head" => "svn_duration"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		kv {
			source => "message"
			target => "duration"
			field_split_pattern =>";"
			value_split => ":"
		}
		
		#ruby {
		#	code => "
		#	if !event.get(%{[status][U]}).nil? then
		#		#event.set('total_!', event.get(%{[status][!]}).count)
		#		if !event.get(%{[status][U]}).is_a?(Array) then
		#			event.set('total_U', 1)
		#		else 
		#			event.set('total_U', event.get(%{[status][U]}).count)
		#		end;
		#	end;
		#  "
		#}
		
		#mutate {
		#	remove_field => [ "message"]
		#}
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		elasticsearch{
			hosts => ["localhost"]
			#user  => "ls23"
			#password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
	}
	else {
		mutate {
			add_field => { "svn_id_head" => "svn_status"}
			add_field => { "suspect" => "error"}
		}
		
		mutate {
			add_field => { "svn_id" => "%{svn_id_head}%{[server][servername]}"}
		}
		
		if [message] =~ "locked" {
			mutate {
			add_field => { "error_type" => "locked"}
			}
		} else if [message] =~ "Connecting" {
			mutate {
			add_field => { "error_type" => "winrm_not_connect"}
			}
		} else if [message] =~ "Previous" {
			mutate {
			add_field => { "error_type" => "operation_not_finished"}
			}
		} else if [message] =~ "Access" {
			mutate {
			add_field => { "error_type" => "access_denied"}
			}
		}
		#elasticsearch{
		#	hosts => ["192.168.99.40:9200"]
		#	user  => "ls23"
		#	password => "bniy2k"
		#	query => "_id:%{svn_id_head}%{[server][servername]}"
		#	fields => { "svn_id" => "previousSvnId"}
		#	enable_sort => false
		#}
		elasticsearch{
			hosts => ["localhost"]
			#user  => "ls23"
			#password => "bniy2k"
			query => "_id:%{svn_id_head}%{[server][servername]}"
			fields => { "svn_id" => "previousSvnId"}
			enable_sort => false
		}
		#drop{}
	}
}

output {
  stdout { codec => rubydebug }
  if [previousSvnId] != [_id] {
		elasticsearch {
		   hosts => [ "localhost"]
		   index => "test-svn-%{+YYYY.MM.dd}"
		   #user  => "ls23"
		   #password => "bniy2k"
		   document_id => "%{svn_id_head}%{[server][servername]}"
		   action => index
		}
   } else if [previousSvnId] == [_id] {
		elasticsearch {
		   hosts => [ "localhost"]
		   index => "test-svn-%{+YYYY.MM.dd}"
		   #user  => "ls23"
		   #password => "bniy2k"
		   document_id => "%{svn_id_head}%{[server][servername]}"
		   action => "update"
		   doc_as_upsert => "true"
		}
   } else {
		elasticsearch {
		   hosts => [ "localhost"]
		   index => "test-svn-%{+YYYY.MM.dd}"
		   #user  => "ls23"
		   #password => "bniy2k"
		   document_id => "%{svn_id_head}%{[server][servername]}"
		   doc_as_upsert => "true"
		}
   }
}