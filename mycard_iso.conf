input {
  redis{
		host => "192.168.158.29"
		port => "6379"
		key => "va_cc_iso"
		data_type => "list"
    }
}

filter {
    mutate {
        gsub => [ "message", "\e", "" ]
    }
    
    grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{MYCARD_ISO_DATE:xdate} %{GREEDYDATA:xmessage}" ]
	}
    
    date {
		match => ["xdate" , "yyyy-MM-dd HH:mm:ss.SSS"]
		target => "@timestamp"
	}
    
    grok {
			 patterns_dir => ["patterns"]
			 match => [ "xmessage", "%{MYCARD_ISO_R2}%{MYCARD_ISO_R3:tag1}%{MYCARD_ISO_R2} %{MYCARD_ISO_R2}%{MYCARD_ISO_STRING:log_status} %{MYCARD_ISO_R2} %{MYCARD_ISO_STRING:class} - %{GREEDYDATA:log_message}" ]
	}
    
    
    
    if [class] =~ "RestApiLogger" {
        grok {
			 patterns_dir => ["patterns"]
			 match => [ "log_message", "%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:requestId}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:remoteAddr}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:host-ip}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:date}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:method}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:url}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:userAgent}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:contentLength}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:contentType}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:statusCode}\|%{MYCARD_ISO_STRING}\|%{MYCARD_ISO_R1:responseTime}" ]
        }
    }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
                            index => "dev-mycard-iso-%{+YYYY.MM.dd}"
                            hosts => ["https://192.168.45.15:443"]
                            #cacert => "/etc/logstash/coordinator.cer"
                            cacert => "D:\LOGSTASH\coordinator.cer"
                            ssl => true
                            ssl_certificate_verification => false
                            user => logstash_internal
                            password => ZaM7Xc2Y74Gd
  }
}