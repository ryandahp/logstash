input {
	 beats {
        port => "5064"
     } 
	 
	#redis{
	#	host => "192.168.158.27"
	#	port => "5044"
	#	key => "apache"
	#	data_type => "list"
	 #}
	 
	# syslog {
	#	port => 12345
	#	#codec => cef
	#	#syslog_field => "syslog"
	#	locale => "en"
	#	grok_pattern=>"\<%{NUMBER}\>%{NUMBER}\s%{GREEDYDATA:message}"
	#	codec => plain
	#}

}

filter{
	
	if [message] =~ "^INFO" {
		if [message] =~ "simpanan.controller.DataDiri" {
			mutate {
				gsub => [ "message", "\n\{\n  ", "{" ]
				gsub => [ "message", "\n\}\n", "} " ]
				gsub => [ "message", "\n\}", "} " ]
				gsub => [ "message", "\n  ", "," ]
				gsub => [ "message", " : ", ":" ]
			}
			grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{EFORM_CONTROLLER}" ]
			}
			
			grok {
			 patterns_dir => ["patterns"]
			 match => [ "um", "%{EFORM_CONTROLLER_UM}" ]
			}
			
			mutate {
				add_field => {"xdate" => "%{date}%{time}"}

			}
			
			date {
				match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
				target => "@timestamp"
			}
			
			mutate {
				gsub => [ "data_type", " ", "_" ]
			}
			
			kv {
				source => "data"
				field_split_pattern =>","
				value_split => ":"
			}
		} else if [message] =~ "simpanan.api.Connection" {
			mutate {
				gsub => [ "message", "\n  ", "" ]
				gsub => ["message", "             ", ""]
				gsub => ["message", "       ", ""]
				gsub => ["message", "          ", ""]
				gsub => ["message", "    ", ""]
				gsub => ["message", "   ", ""]
				gsub => [ "message", "\n", "|" ]
				gsub => [ "message", "<data>", "|data:{" ]
				gsub => [ "message", "</data>", "}|" ]
				gsub => [ "message", "<response>", "|response:{" ]
				gsub => [ "message", "</response>", "}|" ]
				gsub => [ "message", "<content>", "|content:{" ]
				gsub => [ "message", "</content>", "}|" ]
				gsub => [ "message", "<open:result xmlns:open=\"http://OpenAccount.eform.bni.co.id/\">", "|response:{" ]
				gsub => [ "message", "</open:result>", "}|" ]
			}
			
			grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{EFORM_API_CONNECTION}" ]
			}
			
			if [um] =~ "Create Account Prakerja" {
				grok {
				 patterns_dir => ["patterns"]
				 match => [ "um", "%{EFORM_CONNECTION_CREATE_UM}" ]
				}
				
				mutate {
					add_field => {"xdate" => "%{date}%{time}"}
				}
			
				date {
					match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
					target => "@timestamp"
				}
			
				mutate {
					gsub => [ "data_type", " ", "_" ]
					gsub => [ "data_req", "/>", "|," ]
					gsub => [ "data_req", "/", "" ]
					gsub => [ "data_req", "><", "," ]
					gsub => [ "data_req", ">", "|" ]
					gsub => [ "data_req", "<", "," ]
					gsub => [ "data_resp", "/", "" ]
					gsub => [ "data_resp", "><", "," ]
					gsub => [ "data_resp", ">", "|" ]
					gsub => [ "data_resp", "<", "," ]
				}
				kv {
					source => "data_req"
					target => "req"
					field_split_pattern =>","
					value_split => "|"
				}
				kv {
					source => "data_resp"
					target => "resp"
					field_split_pattern =>","
					value_split => "|"
				}
				if [resp][waktu] {
					mutate {
						add_field => { "temp_waktu" => "%{[resp][waktu]}" }
					}
					mutate {
						gsub => [ "temp_waktu", "GMT", "" ]
					}
					date {
						match => ["temp_waktu" , "HH:mm:ss +07:00"]
						target => "tempx_waktu"
					}
					ruby {
						init => "require 'time'"
						code => "
							w = event.get('tempx_waktu')+50400;
							z = w.strftime('%H:%M:%S') 
							event.set('waktu', z);
						"
					}
					mutate {
						remove_field => ["temp_waktu","tempx_waktu"]
					}
					
				}
				
			} else if [um] =~ "Eform Opening Account" {
				grok {
				 patterns_dir => ["patterns"]
				 match => [ "um", "%{EFORM_CONNECTION_OPENING_UM}" ]
				}
				
				mutate {
					add_field => {"xdate" => "%{date}%{time}"}
				}
			
				date {
					match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
					target => "@timestamp"
				}
				
				mutate {
					gsub => [ "data_type", " ", "_" ]
					gsub => [ "data_req", "/>", "|," ]
					gsub => [ "data_req", "/", "" ]
					gsub => [ "data_req", "><", "," ]
					gsub => [ "data_req", ">", "|" ]
					gsub => [ "data_req", "<", "," ]
					gsub => [ "data_resp", "/", "" ]
					gsub => [ "data_resp", "><", "," ]
					gsub => [ "data_resp", ">", "|" ]
					gsub => [ "data_resp", "<", "," ]
				}
				kv {
					source => "data_req"
					target => "req"
					field_split_pattern =>","
					value_split => "|"
				}
				kv {
					source => "data_resp"
					target => "resp"
					field_split_pattern =>","
					value_split => "|"
				}
			}
		} else {
			drop{}
		}
	} else if [message] =~ "^WARN" {
		mutate {
			gsub => [ "message", "\n\{\n  ", "{" ]
			gsub => [ "message", "\n\}\n", "} " ]
			gsub => [ "message", "\n\}", "} " ]
			gsub => [ "message", "\n  ", "," ]
			gsub => [ "message", " : ", ":" ]
		}
		grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{EFORM_CONTROLLER}" ]
			}
			
			grok {
			 patterns_dir => ["patterns"]
			 match => [ "um", "%{EFORM_CONTROLLER_UM}" ]
			}
			
			if "_grokparsefailure" in [tags] {
				grok {
				 patterns_dir => ["patterns"]
				 match => [ "message", "%{EFORM_WARN}" ]
				}
			}
			
			mutate {
				add_field => {"xdate" => "%{date}%{time}"}

			}
			
			date {
				match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
				target => "@timestamp"
			}
			
			mutate {
				gsub => [ "data_type", " ", "_" ]
			}
			
			kv {
				source => "data"
				field_split_pattern =>","
				value_split => ":"
			}
	} else if [message] =~ "^ERROR" {
		if [message] =~ "simpanan.api.Connection" {
			mutate {
				gsub => [ "message", "\n  ", "" ]
				gsub => ["message", "             ", ""]
				gsub => ["message", "       ", ""]
				gsub => ["message", "          ", ""]
				gsub => ["message", "    ", ""]
				gsub => ["message", "   ", ""]
				gsub => [ "message", "\n", "|" ]
				gsub => [ "message", "<data>", "|data:{" ]
				gsub => [ "message", "</data>", "}|" ]
				gsub => [ "message", "<response>", "|response:{" ]
				gsub => [ "message", "</response>", "}|" ]
				gsub => [ "message", "<content>", "|content:{" ]
				gsub => [ "message", "</content>", "}|" ]
				gsub => [ "message", "<open:result xmlns:open=\"http://OpenAccount.eform.bni.co.id/\">", "|response:{" ]
				gsub => [ "message", "</open:result>", "}|" ]
			}
			
			grok {
				 patterns_dir => ["patterns"]
				 match => [ "message", "%{EFORM_API_CONNECTION}" ]
			}
			
			if [um] =~ "Create Account Prakerja" {
				grok {
				 patterns_dir => ["patterns"]
				 match => [ "um", "%{EFORM_CONNECTION_CREATE_UM_ERROR}" ]
				}
				
				mutate {
					add_field => {"xdate" => "%{date}%{time}"}
				}
			
				date {
					match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
					target => "@timestamp"
				}
			
				mutate {
					gsub => [ "data_type", " ", "_" ]
					gsub => [ "data_req", "/>", "|," ]
					gsub => [ "data_req", "/", "" ]
					gsub => [ "data_req", "><", "," ]
					gsub => [ "data_req", ">", "|" ]
					gsub => [ "data_req", "<", "," ]
					gsub => [ "data_resp", "/", "" ]
					gsub => [ "data_resp", "><", "," ]
					gsub => [ "data_resp", ">", "|" ]
					gsub => [ "data_resp", "<", "," ]
				}
				kv {
					source => "data_req"
					target => "req"
					field_split_pattern =>","
					value_split => "|"
				}
				
				grok {
				 patterns_dir => ["patterns"]
				 match => [ "num", "%{EFORM_CONNECTION_CREATE_NUM_ERROR}" ]
				}
			}
		} else {
		mutate {
			gsub => [ "message", "\n", "|" ]
		}
		
		grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{EFORM_ERROR}" ]
		}
		
		mutate {
				gsub => [ "data_type", " ", "_" ]
				add_field => {"xdate" => "%{date}%{time}"}

		}
		
		date {
			match => ["xdate" , "yyyy-MM-ddHH:mm:ss,SSS"]
			target => "@timestamp"
		}
		if "_grokparsefailure" in [tags] {
			mutate {
				add_field => {"log_status" => "ERROR"}

			}
		}
		}
	} else if [fields][log_type] == "accesslog" {
		mutate {
				add_field => {"log_file" => "accesslog"}
		}
		grok {
			 patterns_dir => ["patterns"]
			 match => [ "message", "%{EFORM_ACCESS_LOG}" ]
		}
		date {
			match => ["xdate1" , "dd/MMM/yy:HH:mm:ss"]
			target => "@timestamp"
		}
		mutate {
			remove_field => ["xdate1", "message"]
		}
	}else {
		drop{}
	}
	
	if "_grokparsefailure" in [tags] {
		mutate {
			remove_field => ["num", "um", "data","fields", "ecs", "agent","@version","input", "um", "data_req","data_resp","date","time","xdate"]
		}
	} else if [log_status] =~ "ERROR"  {
		mutate {
			remove_field => ["num", "um", "data","fields", "ecs", "agent","@version","input", "um", "data_req","data_resp","date","time","xdate"]
		}
	} else {
		mutate {
			remove_field => ["num", "um", "data","fields", "ecs", "agent","@version","input", "um", "data_req","data_resp","date","time","xdate"]
		}
	}
}

output {
		stdout { 
				codec => rubydebug 
		}
		
		#elasticsearch {
		#	hosts => [ "192.168.99.40:9200"]
		#	index => "eform-%{+YYYY.MM.dd}"
		#	user  => "ls23"
		#	password  => "bniy2k"
		#}
}
